name: Test

on: [push]

jobs:
  tsc:
    runs-on: ubuntu-latest
    name: Typescript
    steps:
      - uses: actions/checkout@v3

      - name: üíæ Cache Dependencies
        uses: actions/cache@v3
        with:
          path: ./node_modules
          key: ${{ runner.os }}-${{ matrix.node }}-modules-${{ hashFiles('**/yarn.lock') }}

      - name: üî® Install Dependencies
        run: yarn install --frozen-lockfile --ignore-engines --ignore-scripts

      - name: üß™ tsc
        run: yarn types --noEmit

  e2e:
    runs-on: ubuntu-latest
    name: End-to-end tests
    steps:
      - uses: actions/checkout@v3

      - name: üíæ Cache Dependencies
        uses: actions/cache@v3
        with:
          path: ./node_modules
          key: ${{ runner.os }}-${{ matrix.node }}-modules-${{ hashFiles('**/yarn.lock') }}

      - name: üî® Install Dependencies
        run: yarn install --frozen-lockfile --ignore-engines --ignore-scripts

      - name: üíæ Cache Playwright browsers
        uses: actions/cache@v3
        id: playwright-cache
        with:
          path: ~/.cache/ms-playwright
          key: ${{ runner.os }}${{ runner.arch }}-playwright-browsers

      - name: Install Playwright browsers if not cached
        if: steps.playwright-cache.outputs.cache-hit != 'true'
        run: npx playwright install chromium webkit firefox

      - name: Install Playwright system dependencies (always)
        run: npx playwright install-deps

      - name: ‚öóÔ∏è End-to-end tests
        run: |
          yarn e2e-fixtures
          # running with --browser=all causes failures
          yarn e2e --browser=chromium
          yarn e2e --browser=webkit
          yarn e2e --browser=firefox
        env:
          E2E_JUMP_TO_MESSAGE_CHANNEL: jump-to-message
          E2E_ADD_MESSAGE_CHANNEL: add-message
          E2E_TEST_USER_1: test-user-1
          E2E_TEST_USER_2: test-user-2
          E2E_APP_KEY: ${{ secrets.E2E_APP_KEY }}
          E2E_APP_SECRET: ${{ secrets.E2E_APP_SECRET }}
          E2E_TEST_USER_1_TOKEN: ${{ secrets.E2E_TEST_USER_1_TOKEN }}
          E2E_TEST_USER_2_TOKEN: ${{ secrets.E2E_TEST_USER_2_TOKEN }}
          E2E_ADDITIONAL_CHANNELS: mr-channel-1, mr-channel-2, edit-message-channel
          E2E_LONG_MESSAGE_LISTS_CHANNEL: navigate-long-message-lists

      - name: üé• Upload Artifacts
        uses: actions/upload-artifact@v3
        if: ${{ always() }}
        with:
          name: E2E_Artifacts
          path: ./test-results
          retention-days: 1

  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node: [14, 16]
    name: Test with Node ${{ matrix.node }}
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node }}

      - name: üíæ Cache Dependencies
        uses: actions/cache@v3
        with:
          path: ./node_modules
          key: ${{ runner.os }}-${{ matrix.node }}-modules-${{ hashFiles('**/yarn.lock') }}

      - name: üî® Install Dependencies & Build
        run: yarn install --frozen-lockfile --ignore-engines

      - name: üß™ Lint and Test with ${{ matrix.node }}
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
        run: |
          yarn lint
          yarn coverage
          yarn validate-translations

      - name: üß™ Validate CommonJS bundle with ${{ matrix.node }}
        run: yarn validate-cjs
  test-frameworks:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        framework: ['next', 'remix', 'vite']
    name: Test with framework ${{ matrix.framework }}
    env:
      STREAM_API_KEY: ${{ secrets.E2E_APP_KEY }}
      USER_ID: test-user-1
      USER_TOKEN: ${{ secrets.E2E_TEST_USER_1_TOKEN }}
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
      - uses: actions/cache@v3
        id: node-modules-cache
        with:
          path: ./node_modules
          key: ${{ runner.os }}-node-modules-${{ hashFiles('./yarn.lock') }}

      - name: Install packages
        run: yarn install --frozen-lockfile --ignore-engines

      - uses: actions/cache@v3
        id: playwright-cache
        with:
          path: ~/.cache/ms-playwright
          key: ${{ runner.os }}${{ runner.arch }}-playwright-browsers

      - name: Install Playwright browsers if not cached
        if: steps.playwright-cache.outputs.cache-hit != 'true' && matrix.framework == 'vite'
        run: npx playwright install chromium webkit firefox

      - name: Install Playwright system dependencies (always)
        run: npx playwright install-deps

      - name: Pack package (stream-chat-react.tgz)
        working-directory: ./test-react-frameworks
        run: ./pack-package.sh

      - name: Run ${{ matrix.framework }}.sh test
        working-directory: ./test-react-frameworks/${{ matrix.framework }}
        run: ./${{ matrix.framework }}.sh
